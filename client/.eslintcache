[{"/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/index.js":"1","/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/reportWebVitals.js":"2","/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Root/App.js":"3","/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Navbar/Navbar.js":"4","/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Auth/Login.js":"5","/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/services/auth-service.js":"6","/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Auth/Signup.js":"7","/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Auth/ProtectedRoute.js":"8","/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Stocks/Dashboard.js":"9","/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Stocks/StocksGraph.js":"10","/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Stocks/StocksList.js":"11","/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Stocks/StocksLoaderStatus.js":"12","/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Stocks/chartConfig.js":"13","/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Stocks/StockRow.js":"14","/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Stocks/MarketTrendArrow.js":"15"},{"size":605,"mtime":1607263901942,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1607259460581,"results":"18","hashOfConfig":"17"},{"size":1841,"mtime":1607286253652,"results":"19","hashOfConfig":"17"},{"size":1577,"mtime":1607286311231,"results":"20","hashOfConfig":"17"},{"size":1786,"mtime":1607262981277,"results":"21","hashOfConfig":"17"},{"size":1268,"mtime":1607354912106,"results":"22","hashOfConfig":"17"},{"size":2292,"mtime":1607294143153,"results":"23","hashOfConfig":"17"},{"size":974,"mtime":1607263047985,"results":"24","hashOfConfig":"17"},{"size":3241,"mtime":1607285673745,"results":"25","hashOfConfig":"17"},{"size":2702,"mtime":1607285673748,"results":"26","hashOfConfig":"17"},{"size":1918,"mtime":1607285673748,"results":"27","hashOfConfig":"17"},{"size":543,"mtime":1607285673749,"results":"28","hashOfConfig":"17"},{"size":1879,"mtime":1607285673749,"results":"29","hashOfConfig":"17"},{"size":1220,"mtime":1607285673747,"results":"30","hashOfConfig":"17"},{"size":532,"mtime":1607285673746,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1o9rwrp",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/index.js",[],["66","67"],"/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/reportWebVitals.js",[],"/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Root/App.js",[],"/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Navbar/Navbar.js",[],"/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Auth/Login.js",[],"/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/services/auth-service.js",[],"/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Auth/Signup.js",[],"/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Auth/ProtectedRoute.js",[],"/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Stocks/Dashboard.js",["68","69"],"import React from 'react'\nimport StocksList from \"./StocksList.js\";\nimport StocksGraph from \"./StocksGraph.js\";\nimport StocksLoaderStatus from \"./StocksLoaderStatus.js\";\n\nconst stocksUrl = 'ws://stocks.mnet.website/';\n\nclass Dashboard extends React.Component {\n\n  state = {\n  // stocks = {name: {current_value: 12, history: [{time: '2131', value: 45}, ...], is_selected: false}, ...}\n   stocks: {},\n   market_trend: undefined, // 'up' or 'down'\n   connectionError: false\n  }\n\n  componentDidMount = () => {\n    this.connection = new WebSocket(stocksUrl);\n    this.connection.onmessage = this.saveNewStockValues;\n    this.connection.onclose = () => { this.setState({connectionError: true}) }\n  }\n\n  saveNewStockValues = (event) => {\n    //this.props.hideSpinner();\n    let result = JSON.parse(event.data);\n    let [up_values_count, down_values_count] = [0, 0];\n\n    // time stored in histories should be consisitent across stocks(better for graphs)\n    let current_time = Date.now();\n    let new_stocks = this.state.stocks\n    result.map((stock) =>\n    {\n      // stock = ['name', 'value']\n      if(this.state.stocks[stock[0]])\n      {\n        new_stocks[stock[0]].current_value > Number(stock[1]) ? up_values_count++ : down_values_count++;\n\n        new_stocks[stock[0]].current_value = Number(stock[1])\n        new_stocks[stock[0]].history.push({time: current_time, value: Number(stock[1])})\n      }\n      else\n      {\n        new_stocks[stock[0]] = { current_value: stock[1], history: [{time: Date.now(), value: Number(stock[1])}], is_selected: false }\n      }\n    });\n    this.setState({stocks: new_stocks, market_trend: this.newMarketTrend(up_values_count, down_values_count)})\n  }\n\n  // it's about the values that just came in, and not all the stocks\n  newMarketTrend = (up_count, down_count) => {\n    if(up_count === down_count) return undefined;\n    return up_count > down_count ? 'up' : 'down'\n  }\n\n  toggleStockSelection = (stock_name) => {\n    let new_stocks = this.state.stocks;\n    new_stocks[stock_name].is_selected = !new_stocks[stock_name].is_selected\n    this.setState({ stocks: new_stocks })\n  }\n\n  resetData = () => {\n    let new_stocks = this.state.stocks;\n    Object.keys(this.state.stocks).map((stock_name, index) =>\n    {\n      new_stocks[stock_name].history = [new_stocks[stock_name].history.pop()];\n    });\n    this.setState({ stocks: new_stocks });\n  }\n\n  areStocksLoaded = () => {\n    return Object.keys(this.state.stocks).length > 0;\n  }\n\n  render() {\n    return (\n      <div className='container'>\n        <div className='columns'>\n          <StocksList\n            stocks={this.state.stocks}\n            toggleStockSelection={this.toggleStockSelection}\n            resetData={this.resetData}\n            market_trend={this.state.market_trend}\n            areStocksLoaded={this.areStocksLoaded}\n          />\n          <StocksGraph stocks={this.state.stocks} />\n        </div>\n        <div className={ this.props.showSpinner ? 'modal is-active' : 'modal' }>\n          <div className=\"modal-background\"></div>\n          <div className=\"modal-content\">\n            <StocksLoaderStatus connectionError={this.state.connectionError} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Stocks/StocksGraph.js",["70"],"import React from 'react'\nimport {Line} from 'react-chartjs-2';\nimport { chartJsConfig, chartColors, chartDataset } from './chartConfig.js'\n\nclass StocksGraph extends React.Component {\n\n  // too big a function?\n  updateChart = () => {\n    let chart = this.refs.chart.chartInstance;\n\n    if(Object.keys(this.props.stocks).length === 0)\n    {\n      chart.data.datasets = [];\n      return chart.update();\n    }\n\n    Object.keys(this.props.stocks).map((stock_name, index) =>\n    {\n      let current_stock = this.props.stocks[stock_name];\n      let chart_dataset = chart.data.datasets.find((dataset) => {\n        return dataset.label === stock_name.toUpperCase()\n      });\n\n      if(current_stock.is_selected)\n      {\n        let current_stock = this.props.stocks[stock_name];\n        if(chart_dataset)\n        {\n          // only update the data, don't create a new dataset for the graph\n          chart_dataset.data = this.getStockValues(current_stock);\n        }\n        else\n        {\n          // create a new dataset for graph\n          if(current_stock)\n          {\n            chart.data.datasets = chart.data.datasets.concat(\n              [\n                chartDataset(stock_name, chartColors[index], this.getStockValues(current_stock))\n              ]\n            )\n          }\n        }\n      }\n      else\n      {\n        if(chart_dataset)\n        {\n          // remove the dataset from graph\n          chart.data.datasets.splice(chart.data.datasets.indexOf(chart_dataset), 1);\n        }\n      }\n      chart.update();\n    })\n  }\n\n  componentDidUpdate = () => {\n    this.updateChart();\n  }\n\n  // returns an array of objects, {t: timestamp, y: value}\n  getStockValues = (stock) =>{\n    return stock.history.map((history) => {\n      return {t: new Date(history.time), y: history.value};\n    })\n  }\n\n  resetZoom = () => {\n    this.refs.chart.chartInstance.resetZoom();\n  }\n\n  render() {\n    return (\n      <div className={'card column'} >\n        <div className='card-header'>\n          <div className='card-header-title'>\n            Graph\n          </div>\n        </div>\n        <div className='card-content'>\n          <p className='is-size-7 has-text-info'>\n            {\n              this.refs.chart &&\n              this.refs.chart.chartInstance.data.datasets.length > 0 ? 'Scroll/pinch to zoom, drag to pan.' : 'Click on any stocks on your left to see graphs.'\n            }\n          </p>\n          <button className=\"button is-small is-pulled-right\" onClick={this.resetZoom}>Reset zoom</button>\n          <Line\n            data={{datasets: []}}\n            options={chartJsConfig}\n            ref='chart'\n          />\n        </div> \n      </div>\n    );\n  }\n}\n\nexport default StocksGraph;","/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Stocks/StocksList.js",[],"/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Stocks/StocksLoaderStatus.js",[],"/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Stocks/chartConfig.js",[],["71","72"],"/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Stocks/StockRow.js",[],"/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Stocks/MarketTrendArrow.js",[],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":31,"column":24,"nodeType":"79","messageId":"80","endLine":31,"endColumn":26},{"ruleId":"77","severity":1,"message":"78","line":63,"column":60,"nodeType":"79","messageId":"80","endLine":63,"endColumn":62},{"ruleId":"77","severity":1,"message":"78","line":17,"column":60,"nodeType":"79","messageId":"80","endLine":17,"endColumn":62},{"ruleId":"73","replacedBy":"81"},{"ruleId":"75","replacedBy":"82"},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["83"],["84"],"no-global-assign","no-unsafe-negation"]