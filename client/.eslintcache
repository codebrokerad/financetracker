[{"/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/index.js":"1","/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/reportWebVitals.js":"2","/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Root/App.js":"3","/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Navbar/Navbar.js":"4","/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Auth/Login.js":"5","/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/services/auth-service.js":"6","/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Auth/Signup.js":"7","/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Auth/ProtectedRoute.js":"8","/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Stocks/Dashboard/Dashboard.js":"9","/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Stocks/StocksGraph/StocksGraph.js":"10","/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Stocks/StocksLoaderStatus/StocksLoaderStatus.js":"11","/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Stocks/chartConfig/chartConfig.js":"12","/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Stocks/StocksList/StocksList.js":"13","/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Stocks/MarketTrendArrow/MarketTrendArrow.js":"14","/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Stocks/StockRow/StockRow.js":"15","/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Stocks/chartConfig/ChartConfig.js":"16","/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Home/Home.js":"17","/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/services/stock-service.js":"18","/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/PremiumStocks/PremiumStocks.js":"19"},{"size":605,"mtime":1607439333991,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1607259460581,"results":"22","hashOfConfig":"21"},{"size":2757,"mtime":1607608122010,"results":"23","hashOfConfig":"21"},{"size":1677,"mtime":1607607573559,"results":"24","hashOfConfig":"21"},{"size":1796,"mtime":1607680759295,"results":"25","hashOfConfig":"21"},{"size":902,"mtime":1607618760759,"results":"26","hashOfConfig":"21"},{"size":2195,"mtime":1607681046046,"results":"27","hashOfConfig":"21"},{"size":494,"mtime":1607607495915,"results":"28","hashOfConfig":"21"},{"size":2816,"mtime":1607642013717,"results":"29","hashOfConfig":"21"},{"size":1865,"mtime":1607608956558,"results":"30","hashOfConfig":"21"},{"size":324,"mtime":1607609224571,"results":"31","hashOfConfig":"21"},{"size":1879,"mtime":1607421922664,"results":"32","hashOfConfig":"21"},{"size":1860,"mtime":1607609409532,"results":"33","hashOfConfig":"21"},{"size":532,"mtime":1607420727800,"results":"34","hashOfConfig":"21"},{"size":1220,"mtime":1607608845041,"results":"35","hashOfConfig":"21"},{"size":1696,"mtime":1607608426792,"results":"36","hashOfConfig":"21"},{"size":1991,"mtime":1607680775829,"results":"37","hashOfConfig":"21"},{"size":489,"mtime":1607617695935,"results":"38","hashOfConfig":"21"},{"size":1991,"mtime":1607645353611,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1o9rwrp",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"42"},"/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/index.js",[],["83","84"],"/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/reportWebVitals.js",[],"/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Root/App.js",["85","86","87"],"import React, { useState } from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport Signup from \"../Auth/Signup\";\nimport Login from \"../Auth/Login\";\nimport ProtectedRoute from \"../Auth/ProtectedRoute\";\nimport Dashboard from \"../Stocks/Dashboard/Dashboard\";\nimport PremiumStocks from \"../PremiumStocks/PremiumStocks\";\nimport Home from \"../Home/Home\";\nimport Navbar from \"../Navbar/Navbar\";\nimport AuthService from \"../../services/auth-service\";\nimport StockService from \"../../services/stock-service\";\n\n\nfunction App() {\n  const [loggedInUser, setLoggedInUser] = useState(null);\n\n  const service = new AuthService();\n  React.useEffect(() => {\n    fetchUser();\n  }, []);\n  const fetchUser = () => {\n    if (loggedInUser === null) {\n      service\n        .isAuthenticated()\n        .then((response) => {\n          console.log(loggedInUser);\n          setLoggedInUser(response);\n        })\n        .catch((err) => {\n          setLoggedInUser(false);\n        });\n    }\n  };\n  React.useEffect(() => {\n    const stockService = new StockService();\n \n    let array = [\n      \"BNTX\",\n      \"MRNA\",\n      \"OZON\",\n      \"DAO\",\n      \"TWOU\",\n      \"PLTR\",\n      \"U\",\n      \"LMND\",\n      \"BIGC\",\n      \"AMD\",\n      \"QCOM\",\n      \"MU\",\n      \"UBER\",\n    ];\n   //array.forEach((stock) => {\n   //   stockService.saveStock(stock);\n   //});\n    /*setInterval(() => {\n      let array = [\"HLYN\", \"MRNA\"];\n      array.forEach((stock) => {\n        stockService.saveStock(stock);\n      });\n    }, 3000000);*/\n  }, []);\n\n  const getLoggedInUser = (userObject) => {\n    setLoggedInUser(userObject);\n    console.log(userObject);\n  };\n\n  return loggedInUser ? (\n    <section className=\"App\">\n      <Navbar userInSession={loggedInUser} getUser={getLoggedInUser} />\n      <Switch>\n        <ProtectedRoute\n          user={loggedInUser}\n          path=\"/stocks\"\n          component={Dashboard}\n        />\n      </Switch>\n      <Switch>\n        <ProtectedRoute\n          user={loggedInUser}\n          path=\"/premium\"\n          component={PremiumStocks}\n        />\n      </Switch>\n    </section>\n  ) : (\n    <section className=\"App\">\n      <Navbar userInSession={loggedInUser} getUser={getLoggedInUser} />\n\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route\n          exact\n          path=\"/signup\"\n          render={() => <Signup getUser={getLoggedInUser} />}\n        />\n        <Route\n          exact\n          path=\"/login\"\n          render={() => <Login getUser={getLoggedInUser} />}\n        />\n        <ProtectedRoute\n          user={loggedInUser}\n          path=\"/stocks\"\n          component={Dashboard}\n        />\n      </Switch>\n    </section>\n  );\n}\n\nexport default App;\n","/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Navbar/Navbar.js",[],"/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Auth/Login.js",[],"/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/services/auth-service.js",[],"/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Auth/Signup.js",[],"/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Auth/ProtectedRoute.js",[],"/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Stocks/Dashboard/Dashboard.js",["88","89"],"import React from 'react'\nimport StocksList from \"../StocksList/StocksList.js\";\nimport StocksGraph from \"../StocksGraph/StocksGraph.js\";\nimport StocksLoaderStatus from \"../StocksLoaderStatus/StocksLoaderStatus.js\";\nimport \"./Dashboard.css\";\n\nconst stocksUrl = 'ws://stocks.mnet.website/';\n\nclass Dashboard extends React.Component {\n\n  state = {\n   stocks: {},\n   market_trend: undefined, // 'up' or 'down'\n   connectionError: false\n  }\n\n  componentDidMount = () => {\n    this.connection = new WebSocket(stocksUrl);\n    this.connection.onmessage = this.saveNewStockValues;\n    this.connection.onclose = () => { this.setState({connectionError: true}) }\n  }\n\n  saveNewStockValues = (event) => {\n    let result = JSON.parse(event.data);\n    let [up_values_count, down_values_count] = [0, 0];\n    let current_time = Date.now();\n    let new_stocks = this.state.stocks\n    result.map((stock) =>\n    {\n      if(this.state.stocks[stock[0]])\n      {\n        new_stocks[stock[0]].current_value > Number(stock[1]) ? up_values_count++ : down_values_count++;\n\n        new_stocks[stock[0]].current_value = Number(stock[1])\n        new_stocks[stock[0]].history.push({time: current_time, value: Number(stock[1])})\n      }\n      else\n      {\n        new_stocks[stock[0]] = { current_value: stock[1], history: [{time: Date.now(), value: Number(stock[1])}], is_selected: false }\n      }\n    });\n    this.setState({stocks: new_stocks, market_trend: this.newMarketTrend(up_values_count, down_values_count)})\n  }\n  \n  newMarketTrend = (up_count, down_count) => {\n    if(up_count === down_count) return undefined;\n    return up_count > down_count ? 'up' : 'down'\n  }\n\n  toggleStockSelection = (stock_name) => {\n    let new_stocks = this.state.stocks;\n    new_stocks[stock_name].is_selected = !new_stocks[stock_name].is_selected\n    this.setState({ stocks: new_stocks })\n  }\n\n  resetData = () => {\n    let new_stocks = this.state.stocks;\n    Object.keys(this.state.stocks).map((stock_name, index) =>\n    {\n      new_stocks[stock_name].history = [new_stocks[stock_name].history.pop()];\n    });\n    this.setState({ stocks: new_stocks });\n  }\n\n  areStocksLoaded = () => {\n    return Object.keys(this.state.stocks).length > 0;\n  }\n\n  render() {\n    return (\n      <div className='container'>\n        <div className=\"stocks-container\">\n          <StocksList\n            stocks={this.state.stocks}\n            toggleStockSelection={this.toggleStockSelection}\n            resetData={this.resetData}\n            market_trend={this.state.market_trend}\n            areStocksLoaded={this.areStocksLoaded}\n          />\n          <StocksGraph stocks={this.state.stocks} />\n        </div>\n          <div>\n            <StocksLoaderStatus connectionError={this.state.connectionError} />\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Stocks/StocksGraph/StocksGraph.js",["90"],"import React from 'react'\nimport {Line} from 'react-chartjs-2';\nimport { chartJsConfig, chartColors, chartDataset } from '../chartConfig/ChartConfig.js'\n\nclass StocksGraph extends React.Component {\n\n  updateChart = () => {\n    let chart = this.refs.chart.chartInstance;\n\n    if(Object.keys(this.props.stocks).length === 0)\n    {\n      chart.data.datasets = [];\n      return chart.update();\n    }\n\n    Object.keys(this.props.stocks).map((stock_name, index) =>\n    {\n      let current_stock = this.props.stocks[stock_name];\n      let chart_dataset = chart.data.datasets.find((dataset) => {\n        return dataset.label === stock_name.toUpperCase()\n      });\n\n      if(current_stock.is_selected)\n      {\n        let current_stock = this.props.stocks[stock_name];\n        if(chart_dataset)\n        {\n          chart_dataset.data = this.getStockValues(current_stock);\n        }\n        else\n        {\n          if(current_stock)\n          {\n            chart.data.datasets = chart.data.datasets.concat(\n              [\n                chartDataset(stock_name, chartColors[index], this.getStockValues(current_stock))\n              ]\n            )\n          }\n        }\n      }\n      else\n      {\n        if(chart_dataset)\n        {\n          chart.data.datasets.splice(chart.data.datasets.indexOf(chart_dataset), 1);\n        }\n      }\n      chart.update();\n    })\n  }\n\n  componentDidUpdate = () => {\n    this.updateChart();\n  }\n  getStockValues = (stock) =>{\n    return stock.history.map((history) => {\n      return {t: new Date(history.time), y: history.value};\n    })\n  }\n\n  render() {\n    return (\n      <div>\n          <div>\n            Graph\n          </div>\n        <div>\n          <Line\n            data={{datasets: []}}\n            options={chartJsConfig}\n            ref='chart'\n          />\n        </div> \n      </div>\n    );\n  }\n}\n\nexport default StocksGraph;","/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Stocks/StocksLoaderStatus/StocksLoaderStatus.js",[],"/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Stocks/chartConfig/chartConfig.js",[],"/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Stocks/StocksList/StocksList.js",[],"/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Stocks/MarketTrendArrow/MarketTrendArrow.js",[],"/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Stocks/StockRow/StockRow.js",[],"/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Stocks/chartConfig/ChartConfig.js",[],"/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Home/Home.js",[],"/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/services/stock-service.js",[],"/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/PremiumStocks/PremiumStocks.js",["91","92","93"],"import React, { useState, useEffect } from \"react\";\nimport { AgGridColumn, AgGridReact } from \"ag-grid-react\";\nimport StockService from \"../../services/stock-service\";\nimport \"./PremiumStocks.css\";\nimport \"ag-grid-enterprise\";\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\nimport \"ag-grid-community/dist/styles/ag-theme-alpine.css\";\n\nconst PremiumStocks = () => {\n  const [gridApi, setGridApi] = useState(null);\n  const [gridColumnApi, setGridColumnApi] = useState(null);\n  const [rowData, setRowData] = useState(null);\n  const stockService = new StockService();\n\n  useEffect(() => {\n    stockService.getStocks().then((res) => setRowData(res));\n  }, []);\n\n\n  useEffect(() => {\n    console.log(rowData);\n  }, [rowData]);\n\n  function onGridReady(params) {\n    setGridApi(params.api);\n    setGridColumnApi(params.columnApi);\n  }\n  return (\n    <div>\n      {rowData ? (\n        <div className=\"ag-theme-alpine\" style={{ height: 1000, width: 1000 }}>\n          <h3>Tips for the month of December</h3>\n          <p className=\"table-p\">\n            1) This month semiconductor stocks are on fire. Make sure you buy\n            stocks AMD and QCOM.\n          </p>{\" \"}\n          <p className=\"table-p\">\n            2) Software as a service companies are struggling and losing value\n            each day. You may sell stocks of BIGC and DAO.\n          </p>{\" \"}\n          <p className=\"table-p\">\n            3) MRNA and Biontech are ready to transport their vaccines if FDA\n            approves the emergency authorization on December 17. You can hold\n            the stocks.\n          </p>\n          <AgGridReact onGridReady={onGridReady} rowData={rowData.data}>\n            <AgGridColumn field=\"name\"></AgGridColumn>\n            <AgGridColumn field=\"symbol\"></AgGridColumn>\n            <AgGridColumn field=\"price\"></AgGridColumn>\n            <AgGridColumn field=\"range\"></AgGridColumn>\n          </AgGridReact>\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default PremiumStocks;\n",{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":23,"column":6,"nodeType":"100","endLine":23,"endColumn":8,"suggestions":"101"},{"ruleId":"102","severity":1,"message":"103","line":38,"column":11,"nodeType":"104","messageId":"105","endLine":38,"endColumn":23},{"ruleId":"102","severity":1,"message":"106","line":40,"column":9,"nodeType":"104","messageId":"105","endLine":40,"endColumn":14},{"ruleId":"107","severity":1,"message":"108","line":28,"column":24,"nodeType":"109","messageId":"110","endLine":28,"endColumn":26},{"ruleId":"107","severity":1,"message":"108","line":58,"column":60,"nodeType":"109","messageId":"110","endLine":58,"endColumn":62},{"ruleId":"107","severity":1,"message":"108","line":16,"column":60,"nodeType":"109","messageId":"110","endLine":16,"endColumn":62},{"ruleId":"102","severity":1,"message":"111","line":10,"column":10,"nodeType":"104","messageId":"105","endLine":10,"endColumn":17},{"ruleId":"102","severity":1,"message":"112","line":11,"column":10,"nodeType":"104","messageId":"105","endLine":11,"endColumn":23},{"ruleId":"98","severity":1,"message":"113","line":17,"column":6,"nodeType":"100","endLine":17,"endColumn":8,"suggestions":"114"},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'fetchUser'. Either include it or remove the dependency array.","ArrayExpression",["117"],"no-unused-vars","'stockService' is assigned a value but never used.","Identifier","unusedVar","'array' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'gridApi' is assigned a value but never used.","'gridColumnApi' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'stockService'. Either include it or remove the dependency array.",["118"],"no-global-assign","no-unsafe-negation",{"desc":"119","fix":"120"},{"desc":"121","fix":"122"},"Update the dependencies array to be: [fetchUser]",{"range":"123","text":"124"},"Update the dependencies array to be: [stockService]",{"range":"125","text":"126"},[746,748],"[fetchUser]",[656,658],"[stockService]"]