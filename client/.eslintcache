[{"/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/index.js":"1","/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/reportWebVitals.js":"2","/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Root/App.js":"3","/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Navbar/Navbar.js":"4","/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Auth/Login.js":"5","/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/services/auth-service.js":"6","/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Auth/Signup.js":"7","/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Auth/ProtectedRoute.js":"8","/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Stocks/Dashboard/Dashboard.js":"9","/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Stocks/StocksGraph/StocksGraph.js":"10","/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Stocks/StocksLoaderStatus/StocksLoaderStatus.js":"11","/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Stocks/chartConfig/chartConfig.js":"12","/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Stocks/StocksList/StocksList.js":"13","/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Stocks/MarketTrendArrow/MarketTrendArrow.js":"14","/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Stocks/StockRow/StockRow.js":"15","/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Stocks/chartConfig/ChartConfig.js":"16","/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Home/Home.js":"17","/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/services/stock-service.js":"18","/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/PremiumStocks/PremiumStocksThird.js":"19","/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/PremiumStocks/PremiumStocks.js":"20","/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/PremiumStocks/PremiumStocks2.js":"21"},{"size":605,"mtime":1607439333991,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":1607259460581,"results":"24","hashOfConfig":"23"},{"size":2602,"mtime":1607546601269,"results":"25","hashOfConfig":"23"},{"size":1817,"mtime":1607543959277,"results":"26","hashOfConfig":"23"},{"size":1787,"mtime":1607543464472,"results":"27","hashOfConfig":"23"},{"size":1268,"mtime":1607354912106,"results":"28","hashOfConfig":"23"},{"size":2292,"mtime":1607294143153,"results":"29","hashOfConfig":"23"},{"size":974,"mtime":1607263047985,"results":"30","hashOfConfig":"23"},{"size":3312,"mtime":1607422419019,"results":"31","hashOfConfig":"23"},{"size":2248,"mtime":1607546340539,"results":"32","hashOfConfig":"23"},{"size":550,"mtime":1607423627897,"results":"33","hashOfConfig":"23"},{"size":1879,"mtime":1607421922664,"results":"34","hashOfConfig":"23"},{"size":1946,"mtime":1607421357002,"results":"35","hashOfConfig":"23"},{"size":532,"mtime":1607420727800,"results":"36","hashOfConfig":"23"},{"size":1220,"mtime":1607420733031,"results":"37","hashOfConfig":"23"},{"size":1879,"mtime":1607421922664,"results":"38","hashOfConfig":"23"},{"size":2020,"mtime":1607460891674,"results":"39","hashOfConfig":"23"},{"size":920,"mtime":1607514173986,"results":"40","hashOfConfig":"23"},{"size":599,"mtime":1607526955766,"results":"41","hashOfConfig":"23"},{"size":1724,"mtime":1607542821741,"results":"42","hashOfConfig":"23"},{"size":1301,"mtime":1607521503572,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1o9rwrp",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"46"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},"/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/index.js",[],["94","95"],"/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/reportWebVitals.js",[],"/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Root/App.js",["96"],"import React, { useState } from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport Signup from \"../Auth/Signup\";\nimport Login from \"../Auth/Login\";\nimport ProtectedRoute from \"../Auth/ProtectedRoute\";\nimport Dashboard from \"../Stocks/Dashboard/Dashboard\";\nimport PremiumStocks from \"../PremiumStocks/PremiumStocks\";\nimport Home from \"../Home/Home\";\nimport Navbar from \"../Navbar/Navbar\";\nimport AuthService from \"../../services/auth-service\";\nimport StockService from \"../../services/stock-service\";\n\nfunction App() {\n  const [loggedInUser, setLoggedInUser] = useState(null);\n\n  const service = new AuthService();\n  React.useEffect(() => {\n    fetchUser();\n  }, []);\n  // Function to help fetch a logged in user\n  const fetchUser = () => {\n    if (loggedInUser === null) {\n      service\n        .isAuthenticated()\n        .then((response) => {\n          console.log(loggedInUser);\n          setLoggedInUser(response);\n        })\n        .catch((err) => {\n          setLoggedInUser(false);\n        });\n    }\n  };\n  React.useEffect(() => {\n    const stockService = new StockService();\n    setInterval(() => {\n      let array = [\"HLYN\", \"MRNA\"];\n      array.forEach((stock) => {\n        stockService.saveStock(stock);\n      });\n    }, 3000000);\n  }, []);\n  // Function to help get the loggedIn user\n  const getLoggedInUser = (userObject) => {\n    setLoggedInUser(userObject);\n    console.log(userObject);\n  };\n\n  // Run to check if user is authenticated\n\n  return loggedInUser ? (\n    <section className=\"App\">\n      <Navbar userInSession={loggedInUser} getUser={getLoggedInUser} />\n      <Switch>\n        <ProtectedRoute\n          user={loggedInUser}\n          path=\"/stocks\"\n          component={Dashboard}\n        />\n      </Switch>\n      <Switch>\n        <ProtectedRoute\n          user={loggedInUser}\n          path=\"/premium\"\n          component={PremiumStocks}\n        />\n      </Switch>\n    </section>\n  ) : (\n    <section className=\"App\">\n      <Navbar userInSession={loggedInUser} getUser={getLoggedInUser} />\n\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route\n          exact\n          path=\"/signup\"\n          render={() => <Signup getUser={getLoggedInUser} />}\n        />\n        <Route\n          exact\n          path=\"/login\"\n          render={() => <Login getUser={getLoggedInUser} />}\n        />\n        <ProtectedRoute\n          user={loggedInUser}\n          path=\"/stocks\"\n          component={Dashboard}\n        />\n      </Switch>\n    </section>\n  );\n}\n\nexport default App;\n","/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Navbar/Navbar.js",[],"/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Auth/Login.js",[],"/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/services/auth-service.js",[],"/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Auth/Signup.js",[],"/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Auth/ProtectedRoute.js",[],"/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Stocks/Dashboard/Dashboard.js",["97","98"],"import React from 'react'\nimport StocksList from \"../StocksList/StocksList.js\";\nimport StocksGraph from \"../StocksGraph/StocksGraph.js\";\nimport StocksLoaderStatus from \"../StocksLoaderStatus/StocksLoaderStatus.js\";\nimport \"./Dashboard.css\";\n\nconst stocksUrl = 'ws://stocks.mnet.website/';\n\nclass Dashboard extends React.Component {\n\n  state = {\n  // stocks = {name: {current_value: 12, history: [{time: '2131', value: 45}, ...], is_selected: false}, ...}\n   stocks: {},\n   market_trend: undefined, // 'up' or 'down'\n   connectionError: false\n  }\n\n  componentDidMount = () => {\n    this.connection = new WebSocket(stocksUrl);\n    this.connection.onmessage = this.saveNewStockValues;\n    this.connection.onclose = () => { this.setState({connectionError: true}) }\n  }\n\n  saveNewStockValues = (event) => {\n    //this.props.hideSpinner();\n    let result = JSON.parse(event.data);\n    let [up_values_count, down_values_count] = [0, 0];\n\n    // time stored in histories should be consisitent across stocks(better for graphs)\n    let current_time = Date.now();\n    let new_stocks = this.state.stocks\n    result.map((stock) =>\n    {\n      // stock = ['name', 'value']\n      if(this.state.stocks[stock[0]])\n      {\n        new_stocks[stock[0]].current_value > Number(stock[1]) ? up_values_count++ : down_values_count++;\n\n        new_stocks[stock[0]].current_value = Number(stock[1])\n        new_stocks[stock[0]].history.push({time: current_time, value: Number(stock[1])})\n      }\n      else\n      {\n        new_stocks[stock[0]] = { current_value: stock[1], history: [{time: Date.now(), value: Number(stock[1])}], is_selected: false }\n      }\n    });\n    this.setState({stocks: new_stocks, market_trend: this.newMarketTrend(up_values_count, down_values_count)})\n  }\n\n  // it's about the values that just came in, and not all the stocks\n  newMarketTrend = (up_count, down_count) => {\n    if(up_count === down_count) return undefined;\n    return up_count > down_count ? 'up' : 'down'\n  }\n\n  toggleStockSelection = (stock_name) => {\n    let new_stocks = this.state.stocks;\n    new_stocks[stock_name].is_selected = !new_stocks[stock_name].is_selected\n    this.setState({ stocks: new_stocks })\n  }\n\n  resetData = () => {\n    let new_stocks = this.state.stocks;\n    Object.keys(this.state.stocks).map((stock_name, index) =>\n    {\n      new_stocks[stock_name].history = [new_stocks[stock_name].history.pop()];\n    });\n    this.setState({ stocks: new_stocks });\n  }\n\n  areStocksLoaded = () => {\n    return Object.keys(this.state.stocks).length > 0;\n  }\n\n  render() {\n    return (\n      <div className='container'>\n        <div className='columns'>\n          <StocksList\n            stocks={this.state.stocks}\n            toggleStockSelection={this.toggleStockSelection}\n            resetData={this.resetData}\n            market_trend={this.state.market_trend}\n            areStocksLoaded={this.areStocksLoaded}\n          />\n          <StocksGraph stocks={this.state.stocks} />\n        </div>\n        <div className={ this.props.showSpinner ? 'modal is-active' : 'modal' }>\n          <div className=\"modal-background\"></div>\n          <div className=\"modal-content\">\n            <StocksLoaderStatus connectionError={this.state.connectionError} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Stocks/StocksGraph/StocksGraph.js",["99"],"import React from 'react'\nimport {Line} from 'react-chartjs-2';\nimport { chartJsConfig, chartColors, chartDataset } from '../chartConfig/ChartConfig.js'\n\nclass StocksGraph extends React.Component {\n\n  // too big a function?\n  updateChart = () => {\n    let chart = this.refs.chart.chartInstance;\n\n    if(Object.keys(this.props.stocks).length === 0)\n    {\n      chart.data.datasets = [];\n      return chart.update();\n    }\n\n    Object.keys(this.props.stocks).map((stock_name, index) =>\n    {\n      let current_stock = this.props.stocks[stock_name];\n      let chart_dataset = chart.data.datasets.find((dataset) => {\n        return dataset.label === stock_name.toUpperCase()\n      });\n\n      if(current_stock.is_selected)\n      {\n        let current_stock = this.props.stocks[stock_name];\n        if(chart_dataset)\n        {\n          // only update the data, don't create a new dataset for the graph\n          chart_dataset.data = this.getStockValues(current_stock);\n        }\n        else\n        {\n          // create a new dataset for graph\n          if(current_stock)\n          {\n            chart.data.datasets = chart.data.datasets.concat(\n              [\n                chartDataset(stock_name, chartColors[index], this.getStockValues(current_stock))\n              ]\n            )\n          }\n        }\n      }\n      else\n      {\n        if(chart_dataset)\n        {\n          // remove the dataset from graph\n          chart.data.datasets.splice(chart.data.datasets.indexOf(chart_dataset), 1);\n        }\n      }\n      chart.update();\n    })\n  }\n\n  componentDidUpdate = () => {\n    this.updateChart();\n  }\n\n  // returns an array of objects, {t: timestamp, y: value}\n  getStockValues = (stock) =>{\n    return stock.history.map((history) => {\n      return {t: new Date(history.time), y: history.value};\n    })\n  }\n\n  render() {\n    return (\n      <div className={'card column'} >\n        <div className='card-header'>\n          <div className='card-header-title'>\n            Graph\n          </div>\n        </div>\n        <div className='card-content'>\n          <Line\n            data={{datasets: []}}\n            options={chartJsConfig}\n            ref='chart'\n          />\n        </div> \n      </div>\n    );\n  }\n}\n\nexport default StocksGraph;","/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Stocks/StocksLoaderStatus/StocksLoaderStatus.js",[],"/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Stocks/chartConfig/chartConfig.js",[],"/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Stocks/StocksList/StocksList.js",[],"/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Stocks/MarketTrendArrow/MarketTrendArrow.js",[],"/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Stocks/StockRow/StockRow.js",[],["100","101"],"/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Stocks/chartConfig/ChartConfig.js",[],"/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/Home/Home.js",["102"],"import React from \"react\";\nimport \"./Home.css\";\nimport { Link } from \"react-router-dom\";\nimport Carousel from \"react-bootstrap/Carousel\";\n\nconst Home = () => {\n  return (\n    <div className=\"background\">\n      <div className=\"container\">\n        <Carousel>\n          <Carousel.Item>\n            <div className=\"item\">\n              <img\n                className=\"d-block\"\n                src=\"https://i.imgur.com/9A9XjeR.jpeg/\"\n                alt=\"First slide\"\n              />\n            </div>\n            <Carousel.Caption>\n              <div>\n                <h3 className=\"carousel-header\">FINANCE 2021</h3>\n                <p1 className=\"carousel-text\">\n                  A portal to follow stock prices\n                </p1>\n              </div>\n            </Carousel.Caption>\n          </Carousel.Item>\n          <Carousel.Item>\n            <div className=\"item\">\n              <img\n                className=\"d-block\"\n                src=\"https://i.imgur.com/ErRlqf7.jpeg/\"\n                alt=\"Third slide\"\n              />\n            </div>\n            <Carousel.Caption>\n              <div>\n                <h3 className=\"carousel-header\">INVEST WISER</h3>\n                <p1 className=\"carousel-text\">\n                  Choose from top stocks to invest\n                </p1>\n              </div>\n            </Carousel.Caption>\n          </Carousel.Item>\n          <Carousel.Item>\n            <div className=\"item\">\n              <img\n                className=\"d-block\"\n                src=\"https://i.imgur.com/S4TmZi2.jpeg/\"\n                alt=\"Third slide\"\n              />\n            </div>\n            <Carousel.Caption>\n              <div>\n                <h3 className=\"carousel-header\">REAL TIME MARKETS</h3>\n                <p1 className=\"carousel-text\">\n                  Track stocks live by creating an account\n                </p1>\n              </div>\n            </Carousel.Caption>\n          </Carousel.Item>\n        </Carousel>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/services/stock-service.js",[],"/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/PremiumStocks/PremiumStocksThird.js",[],"/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/PremiumStocks/PremiumStocks.js",["103","104","105","106","107"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { AgGridColumn, AgGridReact } from \"ag-grid-react\";\nimport StockService from \"../../services/stock-service\";\n\nimport \"ag-grid-enterprise\";\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\nimport \"ag-grid-community/dist/styles/ag-theme-alpine.css\";\n\nconst PremiumStocks = () => {\n  const [gridApi, setGridApi] = useState(null);\n  const [gridColumnApi, setGridColumnApi] = useState(null);\n  const [rowData, setRowData] = useState(null);\n  const stockService = new StockService();\n\n  useEffect(() => {\n    stockService.getStocks().then((res) => setRowData(res));\n  }, []);\n\n\n  useEffect(() => {\n    console.log(rowData);\n  }, [rowData]);\n\n  function onGridReady(params) {\n    setGridApi(params.api);\n    setGridColumnApi(params.columnApi);\n  }\n  /*if (rowData) {\n    return (\n      <div className=\"ag-theme-alpine\" style={{ height: 4000, width: 6000 }}>\n        <AgGridReact onGridReady={onGridReady} rowData={rowData}>\n          <AgGridColumn field=\"name\"></AgGridColumn>\n          <AgGridColumn field=\"symbol\"></AgGridColumn>\n          <AgGridColumn field=\"price\"></AgGridColumn>\n        </AgGridReact>\n      </div>\n    );\n  }*/\n  return (\n    <div>\n      {rowData ? (\n        <div className=\"ag-theme-alpine\" style={{ height: 4000, width: 6000 }}>\n          <AgGridReact onGridReady={onGridReady} rowData={rowData.data}>\n            <AgGridColumn field=\"name\"></AgGridColumn>\n            <AgGridColumn field=\"symbol\"></AgGridColumn>\n            <AgGridColumn field=\"price\"></AgGridColumn>\n          </AgGridReact>\n        </div>\n      ) : null}\n    </div>\n  )\n};\n\nexport default PremiumStocks;\n","/Users/ahmetdemirlicakmak/Desktop/final-project/financetracker/client/src/components/PremiumStocks/PremiumStocks2.js",[],["108","109"],{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":22,"column":6,"nodeType":"116","endLine":22,"endColumn":8,"suggestions":"117"},{"ruleId":"118","severity":1,"message":"119","line":32,"column":24,"nodeType":"120","messageId":"121","endLine":32,"endColumn":26},{"ruleId":"118","severity":1,"message":"119","line":64,"column":60,"nodeType":"120","messageId":"121","endLine":64,"endColumn":62},{"ruleId":"118","severity":1,"message":"119","line":17,"column":60,"nodeType":"120","messageId":"121","endLine":17,"endColumn":62},{"ruleId":"110","replacedBy":"122"},{"ruleId":"112","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":3,"column":10,"nodeType":"126","messageId":"127","endLine":3,"endColumn":14},{"ruleId":"124","severity":1,"message":"128","line":2,"column":8,"nodeType":"126","messageId":"127","endLine":2,"endColumn":13},{"ruleId":"124","severity":1,"message":"125","line":3,"column":10,"nodeType":"126","messageId":"127","endLine":3,"endColumn":14},{"ruleId":"124","severity":1,"message":"129","line":12,"column":10,"nodeType":"126","messageId":"127","endLine":12,"endColumn":17},{"ruleId":"124","severity":1,"message":"130","line":13,"column":10,"nodeType":"126","messageId":"127","endLine":13,"endColumn":23},{"ruleId":"114","severity":1,"message":"131","line":19,"column":6,"nodeType":"116","endLine":19,"endColumn":8,"suggestions":"132"},{"ruleId":"110","replacedBy":"133"},{"ruleId":"112","replacedBy":"134"},"no-native-reassign",["135"],"no-negated-in-lhs",["136"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'fetchUser'. Either include it or remove the dependency array.","ArrayExpression",["137"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["135"],["136"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'gridApi' is assigned a value but never used.","'gridColumnApi' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'stockService'. Either include it or remove the dependency array.",["138"],["135"],["136"],"no-global-assign","no-unsafe-negation",{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},"Update the dependencies array to be: [fetchUser]",{"range":"143","text":"144"},"Update the dependencies array to be: [stockService]",{"range":"145","text":"146"},[745,747],"[fetchUser]",[695,697],"[stockService]"]